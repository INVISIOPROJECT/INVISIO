# -*- coding: utf-8 -*-
"""NERAnalyzer

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1clIfY-FFei72xgVxDR2tcKo8SHzTyTGl
"""

from transformers import AutoTokenizer, AutoModelForTokenClassification, pipeline
from tqdm import tqdm

class NERAnalyzer:
    def __init__(self, model_dir):
        print(f"Loading NER model from: {model_dir}")
        self.tokenizer = AutoTokenizer.from_pretrained(model_dir)
        self.model = AutoModelForTokenClassification.from_pretrained(model_dir)
        self.ner_pipeline = pipeline(
            "ner",
            model=self.model,
            tokenizer=self.tokenizer,
            aggregation_strategy="simple"  # يجمع الكلمات المتتابعة لنفس الكيان
        )

    def analyze_batch_json(self, json_data, batch_size=16):
        texts = json_data.get("texts", [])
        results = []

        print(f"Analyzing {len(texts)} texts in batches of {batch_size}...")

        for i in tqdm(range(0, len(texts), batch_size)):
            batch_texts = texts[i:i + batch_size]
            batch_results = self._analyze_batch(batch_texts)
            results.extend(batch_results)

        return {"results": results}

    def _analyze_batch(self, texts):
        batch_results = []
        for text in texts:
            if not isinstance(text, str) or text.strip() == "":
                batch_results.append({
                    "text": text,
                    "entities": [],
                    "error_message": "empty or invalid text"
                })
                continue

            try:
                ner_results = self.ner_pipeline(text)
                batch_results.append({
                    "text": text,
                    "entities": ner_results,
                    "error_message": None
                })
            except Exception as e:
                batch_results.append({
                    "text": text,
                    "entities": [],
                    "error_message": str(e)
                })
        return batch_results