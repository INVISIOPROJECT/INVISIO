# -*- coding: utf-8 -*-
"""utils

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1V31ePZEYov0xI8pNcGeSs9Ht5h6tFuAI
"""

import matplotlib.pyplot as plt
from wordcloud import WordCloud

def plot_entity_distribution(entity_counts_df, output_path=None):
    plt.figure(figsize=(10, 6))
    bars = plt.bar(entity_counts_df['Entity'], entity_counts_df['Count'], color='skyblue')
    plt.xlabel('Entity Type')
    plt.ylabel('Count')
    plt.title('Entity Frequency Distribution')
    plt.xticks(rotation=45)
    plt.tight_layout()

    for bar in bars:
        height = bar.get_height()
        plt.text(bar.get_x() + bar.get_width()/2., height, f'{height}', ha='center', va='bottom')

    if output_path:
        plt.savefig(output_path)
        print(f"Entity distribution plot saved to {output_path}")
        plt.close()
    else:
        plt.show()

def plot_entity_wordcloud(entity_counts_df, output_path=None):
    if 'Count' not in entity_counts_df.columns:
        freq_dict = entity_counts_df['word'].value_counts().to_dict()
    else:
        freq_dict = dict(zip(entity_counts_df['word'], entity_counts_df['Count']))

    wordcloud = WordCloud(width=800, height=400, background_color='white').generate_from_frequencies(freq_dict)

    plt.figure(figsize=(12, 6))
    plt.imshow(wordcloud, interpolation='bilinear')
    plt.axis("off")
    plt.title("Named Entity WordCloud", fontsize=18)

    if output_path:
        plt.savefig(output_path)
        print(f"WordCloud saved to {output_path}")
        plt.close()
    else:
        plt.show()

def prepare_wordcloud_data(df, entity_type=None):
    if entity_type:
        filtered_df = df[df['entity'] == entity_type]
    else:
        filtered_df = df

    word_counts = filtered_df['word'].value_counts().reset_index()
    word_counts.columns = ['word', 'Count']
    return word_counts